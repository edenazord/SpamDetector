# 🎉 Release Automatiche - Spam Detector
# Crea release automatiche quando si crea un tag

name: 🎯 Auto Release

on:
  push:
    tags:
      - 'v*.*.*'  # Es: v1.0.0, v2.1.3
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag version (es: v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: 🔧 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🏃‍♂️ Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: 🔑 Create keystore from secrets
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks
        
    - name: 🚀 Build Release APK
      run: ./gradlew assembleRelease --stacktrace
      env:
        KEYSTORE_FILE: keystore.jks
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: 📝 Generate changelog
      id: changelog
      run: |
        echo "## 🚀 What's New" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## 📱 Installation" >> CHANGELOG.md
        echo "Download the APK file and install on your Android device." >> CHANGELOG.md
        
    - name: 🎉 Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: SpamDetector ${{ github.ref_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        
    - name: 📤 Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: SpamDetector-${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive